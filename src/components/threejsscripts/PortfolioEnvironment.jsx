/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 portfolio-environment.gltf --transform 
Files: portfolio-environment.gltf [9.35MB] > portfolio-environment-transformed.glb [1.36MB] (85%)
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export function PortfolioEnvironment(props) {
  const { nodes, materials } = useGLTF('/models/portfolio-environment-transformed.glb')
  return (
    <group {...props} dispose={null}>
      <group position={[3.267, 0, -0.001]} rotation={[-Math.PI / 2, 0, 0.034]} scale={-0.001}>
        <mesh geometry={nodes.Mesh.geometry} material={materials.Face} />
        <mesh geometry={nodes.Mesh_1.geometry} material={materials.PaletteMaterial001} />
      </group>
      <mesh geometry={nodes.pWater.geometry} material={materials.PaletteMaterial002} rotation={[Math.PI / 2, 0, 0]} scale={[11.852, 15.583, 11.707]} />
      <mesh geometry={nodes.pCube6.geometry} material={materials.PaletteMaterial003} rotation={[Math.PI / 2, 0, 0]} scale={0.037} />
      <mesh geometry={nodes.JesusHill.geometry} material={materials.dirt} position={[0, -0.463, 0]} rotation={[-Math.PI, 1.254, -Math.PI]} scale={0} />
      <mesh geometry={nodes.pCube3.geometry} material={materials.lambert2} position={[-0.108, 0.642, 0.047]} rotation={[Math.PI / 2, 0, -1.888]} scale={[0.007, 0.014, 0.007]} />
      <instancedMesh args={[nodes.Mesh007.geometry, materials.PaletteMaterial002, 27]} instanceMatrix={nodes.Mesh007.instanceMatrix} />
    </group>
  )
}

useGLTF.preload('/models/portfolio-environment-transformed.glb')
