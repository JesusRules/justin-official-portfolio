/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.12 JustinHead.gltf --transform 
Files: JustinHead.gltf [6.85MB] > JustinHead-transformed.glb [314.84KB] (95%)
*/

import React, { useRef, useState } from 'react'
import * as THREE from 'three';
import { useGLTF } from '@react-three/drei'
import { easing } from 'maath';
import { Canvas, useFrame } from '@react-three/fiber'

export function JustinFace(props) {
  const { nodes, materials } = useGLTF('/models/JustinHead-transformed.glb')
  return (
    <group position={[0, 0.7, 0]} {...props} dispose={null}>
      <mesh geometry={nodes.Group1.geometry} material={materials['default']} rotation={[0.25, 0.6, 0]} scale={.4} >
        <meshNormalMaterial />
      </mesh>
    </group>
  )
}

export function JustinHead(props) {
  const mesh = useRef();
  const [dummy] = useState(() => new THREE.Object3D());

  useFrame((state, dt) => {
      mesh.current.position.set(-1, -0.2, 0); // Set the pivot position
      mesh.current.updateMatrix(); // not really needed

      dummy.lookAt(state.pointer.x, state.pointer.y, .5);
      easing.dampQ(mesh.current.quaternion, dummy.quaternion, 0.15, dt);
  })

  return (
      <group ref={mesh} {...props} dispose={null}>
      {/* <JustinFace /> */}
      {/* <HeadPhones scale={[0.06, 0.06, 0.06]} rotation={[0.3, 0, 0]}
          position={[0.1, -1.9, -0.9]} /> */}
      </group>
  )
}

useGLTF.preload('/models/JustinHead-transformed.glb')
